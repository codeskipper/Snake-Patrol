"""
CVE-2015-20107.py

Checks if patch for CVE-2015-20107 is applied using code from demo exploit as published on
https://github.com/python/cpython/issues/68966#issuecomment-1093689665

This script is designed to be invoked as an argument to the python interpreter to be checked, e.g.
/Library/ManagedFrameworks/Python/Python3.framework/Versions/3.12/bin/python3 ./CVE-2015-20107.py

"""

import sys
import platform
import warnings

print("=====CVE-2015-20107.py START=====")

version = f"{sys.version_info[0]}."
#v_info = sys.version.split('\n')[1]
# print(f"path:{sys.executable} version:{platform.python_version()} info:{v_info}")
print(f"python_path:{sys.executable} python_version:{platform.python_version()}")

try:
    import mailcap
except Exception as e:
    print(f"failed to import mailcap - exception: {e}")
    exit(code=1)

d = mailcap.getcaps()
with warnings.catch_warnings(record=True) as w:
    commandline, MIMEtype = mailcap.findmatch(d, "text/*", filename="'$(xterm);#.txt")
    if len(w) > 0:
        print(f"Warning encountered trying to use unquoted mailcap path: {w[0].message}")
        print("CVE-2015-20107 patched OK, exiting without error.")
        print("=====CVE-2015-20107.py STOP=====\n\n")
        exit(code=0)

print("No error encountered importing unquoted mailcap path...!")
print("CVE-2015-20107 NOT patched, PLEASE UPDATE OR UNINSTALL THIS PYTHON VERSION!")
print("=====CVE-2015-20107.py STOP=====\n\n")
exit(code=1)
